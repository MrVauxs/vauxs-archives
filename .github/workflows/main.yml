name: Release Creation

on:
    release:
        types: [published]

jobs:
    build:
        runs-on: ubuntu-latest
        permissions:
            contents: write
        steps:
            # region Preparation
            - uses: actions/checkout@v4
            - uses: oven-sh/setup-bun@v2

            - name: Extract version from tag without the v
              id: get-version
              run: echo "v=${GITHUB_REF_NAME#v}" >> "$GITHUB_OUTPUT"

              # https://stackoverflow.com/questions/61919141/read-json-file-in-github-actions
            - name: Get Module JSON
              id: set_var
              run: |
                  echo "PACKAGE_JSON=$(jq -c . < module.json)" >> $GITHUB_OUTPUT

            - name: Get Module ID
              id: module_id
              run: echo "module_id=${{fromJson(steps.set_var.outputs.PACKAGE_JSON).id}}" >> "$GITHUB_OUTPUT"

            - name: Get Module Title
              id: title
              run: echo "title=${{fromJson(steps.set_var.outputs.PACKAGE_JSON).title}}" >> "$GITHUB_OUTPUT"

            - name: Install packages
              run: bun i --frozen-lockfile
              # endregion

              # region Actual Work Steps
            - name: Substitute Manifest and Download Links For Versioned Ones
              id: sub_manifest_link_version
              uses: microsoft/variable-substitution@v1
              with:
                  files: module.json
              env:
                  version: ${{ steps.get-version.outputs.v }}
                  manifest: https://github.com/${{ github.repository }}/releases/latest/download/module.json
                  download: https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/module.zip

            - name: Substitute manifest for prerelease
              if: github.event.release.prerelease
              id: sub_prerelease_manifest_version
              uses: devops-actions/variable-substitution@v1.2
              with:
                  files: module.json
              env:
                  manifest: https://raw.githubusercontent.com/${{ github.repository }}/next/module.json

            - name: Build distribution
              run: bun run build

              # Create a zip file with all files required by the module to add to the release.
            - name: Bundle into ZIP file
              run: zip -r9 ./module.zip module.json assets/ lang/ dist/ packs/ CHANGELOG.md LICENSE README.md

              # Create a release for this specific version.
            - name: Update release with files
              id: create_version_release
              uses: ncipollo/release-action@v1
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  allowUpdates: true
                  omitDraftDuringUpdate: true
                  omitBodyDuringUpdate: true
                  omitPrereleaseDuringUpdate: true
                  name: ${{ steps.get-version.outputs.version-without-v }}
                  artifacts: "./module.json, ./module.zip"

            - name: Publish to FoundryVTT
              uses: cs96and/FoundryVTT-release-package@v1.0.2
              if: ${{ !github.event.release.prerelease && env.PACKAGE_TOKEN }}
              env:
                  PACKAGE_TOKEN: ${{ secrets.PACKAGE_TOKEN }}
              with:
                  package-token: ${{ env.PACKAGE_TOKEN }}
                  manifest-url: https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/module.json

                  # endregion
